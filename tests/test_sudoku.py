import pytest
from suso import Sudoku, NoSolution


def test_create_valid():
    input1 = [(x % 9) + 1 for x in range(81)]
    input2 = [[x + 1 for x in range(9)] for _ in range(9)]
    s1 = Sudoku(input1)
    s2 = Sudoku(input2)
    assert s1 == s2

def test_create_invalid():
    with pytest.raises(TypeError):
        Sudoku("Test")

    with pytest.raises(ValueError):
        Sudoku([x for x in range(80)])

    with pytest.raises(TypeError):
        Sudoku([str(x) for x in range(81)])


def test_check_valid():
    valid1 = [0, 0, 0, 0, 0, 0, 6, 8, 0,
              0, 0, 0, 0, 7, 3, 0, 0, 9,
              3, 0, 9, 0, 0, 0, 0, 4, 5,
              4, 9, 0, 0, 0, 0, 0, 0, 0,
              8, 0, 3, 0, 5, 0, 9, 0, 2,
              0, 0, 0, 0, 0, 0, 0, 3, 6,
              9, 6, 0, 0, 0, 0, 3, 0, 8,
              7, 0, 0, 6, 8, 0, 0, 0, 0,
              0, 2, 8, 0, 0, 0, 0, 0, 0, ]
    valid2 = [1, 7, 2, 5, 4, 9, 6, 8, 3,
              6, 4, 5, 8, 7, 3, 2, 1, 9,
              3, 8, 9, 2, 6, 1, 7, 4, 5,
              4, 9, 6, 3, 2, 7, 8, 5, 1,
              8, 1, 3, 4, 5, 6, 9, 7, 2,
              2, 5, 7, 1, 9, 8, 4, 3, 6,
              9, 6, 4, 7, 1, 5, 3, 2, 8,
              7, 3, 1, 6, 8, 2, 5, 9, 4,
              5, 2, 8, 9, 3, 4, 1, 6, 7, ]
    s1 = Sudoku(valid1)
    s2 = Sudoku(valid2)
    assert s1.check()
    assert s2.check()


def test_check_invalid():
    invalid1 = [0, 0, 0, 0, 0, 0, 6, 8, 0,
                0, 0, 0, 0, 7, 3, 0, 0, 9,
                3, 0, 9, 0, 0, 0, 3, 4, 5,
                4, 9, 0, 0, 0, 0, 0, 0, 0,
                8, 0, 3, 0, 5, 0, 9, 0, 2,
                0, 0, 0, 0, 0, 0, 0, 3, 6,
                9, 6, 0, 0, 0, 0, 3, 0, 8,
                7, 0, 0, 6, 8, 0, 0, 0, 0,
                0, 2, 8, 0, 0, 0, 0, 0, 0, ]
    invalid2 = [7, 7, 2, 5, 4, 9, 6, 8, 3,
                6, 4, 5, 8, 7, 3, 2, 1, 9,
                3, 8, 9, 2, 6, 1, 7, 4, 5,
                4, 9, 6, 3, 2, 7, 8, 5, 1,
                8, 1, 3, 4, 5, 6, 9, 7, 2,
                2, 5, 7, 1, 9, 8, 4, 3, 6,
                9, 6, 4, 7, 1, 5, 3, 2, 8,
                1, 3, 1, 6, 8, 2, 5, 9, 4,
                5, 2, 8, 9, 3, 4, 1, 6, 7, ]
    s1 = Sudoku(invalid1)
    s2 = Sudoku(invalid2)
    assert not s1.check()
    assert not s2.check()


def test_solve_valid():
    test = [0, 0, 0, 0, 0, 0, 6, 8, 0,
            0, 0, 0, 0, 7, 3, 0, 0, 9,
            3, 0, 9, 0, 0, 0, 0, 4, 5,
            4, 9, 0, 0, 0, 0, 0, 0, 0,
            8, 0, 3, 0, 5, 0, 9, 0, 2,
            0, 0, 0, 0, 0, 0, 0, 3, 6,
            9, 6, 0, 0, 0, 0, 3, 0, 8,
            7, 0, 0, 6, 8, 0, 0, 0, 0,
            0, 2, 8, 0, 0, 0, 0, 0, 0, ]
    ref = [1, 7, 2, 5, 4, 9, 6, 8, 3,
           6, 4, 5, 8, 7, 3, 2, 1, 9,
           3, 8, 9, 2, 6, 1, 7, 4, 5,
           4, 9, 6, 3, 2, 7, 8, 5, 1,
           8, 1, 3, 4, 5, 6, 9, 7, 2,
           2, 5, 7, 1, 9, 8, 4, 3, 6,
           9, 6, 4, 7, 1, 5, 3, 2, 8,
           7, 3, 1, 6, 8, 2, 5, 9, 4,
           5, 2, 8, 9, 3, 4, 1, 6, 7, ]
    assert Sudoku(test).solve() == Sudoku(ref)

def test_solve_invalid():
    test = [0, 0, 0, 0, 0, 0, 6, 8, 0,
            0, 0, 0, 0, 7, 3, 0, 0, 9,
            3, 0, 9, 0, 0, 0, 0, 4, 5,
            4, 9, 0, 0, 0, 0, 0, 0, 0,
            8, 0, 3, 0, 5, 0, 9, 0, 2,
            0, 0, 0, 0, 0, 0, 0, 3, 6,
            9, 6, 0, 0, 0, 0, 3, 0, 8,
            7, 0, 0, 6, 8, 0, 0, 0, 0,
            0, 2, 8, 0, 0, 0, 0, 8, 0, ]
    with pytest.raises(NoSolution):
        Sudoku(test).solve()